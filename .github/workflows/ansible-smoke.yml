name: Ansible Smoke Deploy

on:
  workflow_dispatch:
    inputs:
      host:
        description: 'Target host (IP or FQDN)'
        required: true
        type: string
      user:
        description: 'SSH user'
        required: true
        default: 'root'
        type: string
      domain_name:
        description: 'DOMAIN_NAME for Traefik/n8n (e.g., example.com)'
        required: true
        type: string
      acme_email:
        description: "ACME email for Let's Encrypt"
        required: true
        type: string
      subdomain:
        description: 'Subdomain for n8n (e.g., n8n)'
        required: true
        default: 'n8n'
        type: string
      tz:
        description: 'TZ (e.g., Europe/Kyiv)'
        required: true
        default: 'Europe/Kyiv'
        type: string
      generic_timezone:
        description: 'GENERIC_TIMEZONE (e.g., Europe/Kyiv)'
        required: true
        default: 'Europe/Kyiv'
        type: string

concurrency:
  group: ansible-smoke-${{ github.ref }}-${{ inputs.host }}
  cancel-in-progress: false

permissions:
  contents: read

jobs:
  smoke:
    name: Deploy & Smoke Test (Ansible)
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      ANSIBLE_HOST_KEY_CHECKING: 'False'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate required secrets
        shell: bash
        run: |
          if [ -z "${{ secrets.SMOKE_SSH_KEY }}" ]; then
            echo 'ERROR: Missing required secret SMOKE_SSH_KEY' >&2
            exit 1
          fi

      - name: Install Ansible and tools
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends ansible rsync sshpass

      - name: Prepare SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SMOKE_SSH_KEY }}" > ~/.ssh/id_ansible
          chmod 600 ~/.ssh/id_ansible

      - name: Install Ansible collections
        run: |
          ansible-galaxy collection install -r tests/ansible/collections/requirements.yml

      - name: Create CI inventory
        run: |
          cat > tests/ansible/inventory.ci.ini <<'EOF'
          [n8n]
          target ansible_host=${{ inputs.host }} ansible_user=${{ inputs.user }} ansible_ssh_private_key_file=~/.ssh/id_ansible
          EOF

      - name: Run smoke playbook
        run: |
          ansible-playbook -i tests/ansible/inventory.ci.ini tests/ansible/playbooks/smoke.yml \
            -e "DOMAIN_NAME=${{ inputs.domain_name }}" \
            -e "ACME_EMAIL=${{ inputs.acme_email }}" \
            -e "SUBDOMAIN=${{ inputs.subdomain }}" \
            -e "TZ=${{ inputs.tz }}" \
            -e "GENERIC_TIMEZONE=${{ inputs.generic_timezone }}"

      - name: Collect remote docker logs (on failure)
        if: failure()
        run: |
          set -e
          mkdir -p ansible-logs
          # Docker process listing on remote
          ansible -i tests/ansible/inventory.ci.ini n8n -m shell -a "docker ps -a" > ansible-logs/docker-ps.txt || true
          # Compose status and logs on remote
          ansible -i tests/ansible/inventory.ci.ini n8n -m shell -a "cd /opt/n8n/stack && docker compose ps" > ansible-logs/compose-ps.txt || true
          ansible -i tests/ansible/inventory.ci.ini n8n -m shell -a "cd /opt/n8n/stack && docker compose logs --no-color --tail=500" > ansible-logs/compose-logs.txt || true
          # System info
          ansible -i tests/ansible/inventory.ci.ini n8n -m shell -a "df -h" > ansible-logs/df-h.txt || true
          ansible -i tests/ansible/inventory.ci.ini n8n -m shell -a "free -m" > ansible-logs/free-m.txt || true

      - name: Collect endpoint headers (always)
        if: always()
        run: |
          mkdir -p ansible-logs
          curl -sk -I https://traefik.${{ inputs.domain_name }} > ansible-logs/traefik-head.txt || true
          curl -sk -I https://${{ inputs.subdomain }}.${{ inputs.domain_name }} > ansible-logs/n8n-head.txt || true

      - name: Upload smoke artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ansible-smoke-logs
          path: ansible-logs
