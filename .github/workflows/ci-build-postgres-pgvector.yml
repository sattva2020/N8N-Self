name: Build and push postgres-pgvector

on:
  push:
    # allow pushes from feature branches and the date-stamped branch we use during testing
    branches:
      - feat/ansible-smoke-ci
      - feat/ansible-smoke-ci-2025-09-17-1
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # Default registry is GHCR. To use a different registry, change this value or
      # add a secret REGISTRY_URL and update this workflow accordingly.
      REGISTRY: ghcr.io
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set REGISTRY from secret or default
        env:
          REGISTRY_URL: ${{ secrets.REGISTRY_URL }}
        run: |
          # Use the step-level env to safely access the secret in the script.
          if [ -n "$REGISTRY_URL" ]; then
            echo "REGISTRY=$REGISTRY_URL" >> $GITHUB_ENV
          else
            echo "REGISTRY=ghcr.io" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to registry (defaults to GHCR)
        uses: docker/login-action@v2
        # By default we authenticate to GHCR using the automatically provided
        # `GITHUB_TOKEN` and the current actor. This is suitable for pushing
        # packages in this repository. If you want to push to a different
        # registry, set the `REGISTRY_URL` secret and add `REGISTRY_USERNAME`/
        # `REGISTRY_PASSWORD` (or a PAT) to repository secrets and update this
        # step to use those secrets instead.
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        id: buildpush
        with:
          context: ./infra/postgres-pgvector
          file: ./infra/postgres-pgvector/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/postgres-pgvector:15
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/postgres-pgvector:latest
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/postgres-pgvector:${{ github.sha }}

      - name: Set outputs
        run: |
          echo "image=${{ env.REGISTRY }}/${{ github.repository_owner }}/postgres-pgvector:${{ github.sha }}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Verify image (smoke)
        run: |
          echo "Image pushed: ${{ env.REGISTRY }}/${{ github.repository_owner }}/postgres-pgvector:${{ github.sha }}"
