services:
  keycloak:
    image: quay.io/keycloak/keycloak:20.0.3
    command: ["start-dev"]
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    ports:
      - "8081:8080"
    volumes:
      - keycloak_data:/opt/keycloak/data
    networks:
      - proxy
      - backend

  oauth2-proxy:
    image: quay.io/oauth2-proxy/oauth2-proxy:latest
    environment:
      OAUTH2_PROXY_PROVIDER: "oidc"
      # In production this should use the public issuer URL reachable by oauth2-proxy and Traefik
      OAUTH2_PROXY_OIDC_ISSUER_URL: "https://auth.${DOMAIN_NAME}/realms/dashboard"
      OAUTH2_PROXY_CLIENT_ID: "dashboard-client"
      OAUTH2_PROXY_CLIENT_SECRET: "${OAUTH2_PROXY_CLIENT_SECRET}"
      OAUTH2_PROXY_COOKIE_SECRET: "${OAUTH2_PROXY_COOKIE_SECRET}"
      OAUTH2_PROXY_EMAIL_DOMAINS: "*"
      OAUTH2_PROXY_UPSTREAMS: "http://dashboard-backend:3000/"
      OAUTH2_PROXY_HTTP_ADDRESS: "0.0.0.0:4180"
      # Production redirect should be HTTPS through Traefik
      OAUTH2_PROXY_REDIRECT_URL: "https://auth.${DOMAIN_NAME}/oauth2/callback"
      OAUTH2_PROXY_COOKIE_SECURE: "true"
      OAUTH2_PROXY_LOGIN_URL: "https://auth.${DOMAIN_NAME}/realms/dashboard/protocol/openid-connect/auth"
      OAUTH2_PROXY_REDEEM_URL: "https://auth.${DOMAIN_NAME}/realms/dashboard/protocol/openid-connect/token"
      OAUTH2_PROXY_VALIDATE_URL: "https://auth.${DOMAIN_NAME}/realms/dashboard/protocol/openid-connect/userinfo"
    ports:
      - "4180:4180"
    depends_on:
      - keycloak
    labels:
      - traefik.enable=true
      - traefik.docker.network=stack_proxy
      - traefik.http.routers.oauth2-proxy.rule=Host(`auth.${DOMAIN_NAME}`)
      - traefik.http.routers.oauth2-proxy.entrypoints=websecure
      - traefik.http.routers.oauth2-proxy.tls.certresolver=le
      - traefik.http.services.oauth2-proxy.loadbalancer.server.port=4180
    networks:
      - proxy
      - backend

  dashboard-backend:
    build: ../dashboard/backend
    image: dashboard-backend:local
    environment:
      - NODE_ENV=development
      - POLL_INTERVAL=15
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - backend
      - proxy
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
    labels:
      - traefik.enable=true
      - traefik.docker.network=stack_proxy
      - traefik.http.routers.dashboard-backend.rule=Host(`dashboard.${DOMAIN_NAME}`)
      - traefik.http.routers.dashboard-backend.entrypoints=websecure
      - traefik.http.routers.dashboard-backend.tls.certresolver=le
      - traefik.http.routers.dashboard-backend.middlewares=oauth2-proxy@docker

  dashboard-frontend:
    build: ../dashboard/frontend
    image: dashboard-frontend:local
    networks:
      - proxy
    labels:
      - traefik.enable=true
      - traefik.docker.network=stack_proxy
      - traefik.http.routers.dashboard.rule=Host(`dashboard.${DOMAIN_NAME}`)
      - traefik.http.routers.dashboard.entrypoints=websecure
      - traefik.http.routers.dashboard.tls.certresolver=le
      - traefik.http.routers.dashboard.middlewares=oauth2-proxy@docker

networks:
  proxy:
    external: true
  backend:
    external: false

volumes:
  keycloak_data:
